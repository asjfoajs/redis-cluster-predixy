apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
spec:
  {{- if .Values.updateStrategy }}
  updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "common.names.fullname" . }}-headless
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
    spec:
      containers:
        - name: {{ include "common.names.fullname" . }}
          image: {{ .Values.image.repository}}:{{ .Values.image.tag}}
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          command:
            - predixy
          args:
            - /etc/predixy/predixy.conf
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            - name: tcp-predixy
              containerPort: {{ .Values.service.port}}
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/predixy/
              name: predixy-config-dir
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - mountPath: /data/
              name: predixy-data-dir
            {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "common.names.fullname" . }}.conf
          name: predixy-config-dir
        {{- if .Values.persistence.enabled }}
        - name: predixy-data-dir
          persistentVolumeClaim:
            claimName: predixy-pvc-nfs ## 存储
        {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: { }
      schedulerName: default-scheduler
  volumeClaimTemplates:
    {{- if .Values.persistence.enabled }}
    - metadata:
        name: predixy-data-dir
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 10 }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote}}
          {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
    {{- end}}